version: '3.8'

services:

#################################  prometheus  #################################

  prometheus:
    image: prom/prometheus:v2.51.2
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./http_502_alert.yml:/etc/prometheus/rules/http_502_alert.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - monitoring
    restart: unless-stopped

#################################  grafana  #################################

  grafana:
    image: grafana/grafana:11.0.0
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
# Mount file config datasource prometheus to garafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    networks:
      - monitoring
    restart: unless-stopped

#################################  alertmanager  #################################

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    volumes:
      - ./config.yml:/etc/alertmanager/config.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    networks:
      - monitoring
    restart: unless-stopped

#################################  node-exporter  #################################

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    pid: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    ports:
      - "9100:9100"
    networks:
      - monitoring
    restart: unless-stopped

#################################  blackbox-exporter  #################################

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: blackbox-exporter
    networks:
      - monitoring
    ports:
      - "9115:9115"
    volumes:
      - ./blackbox.yml:/etc/blackbox/blackbox.yml
    command:
      - '--config.file=/etc/blackbox/blackbox.yml'
    restart: unless-stopped

#################################  mongo database  #################################

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpass
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - monitoring
    restart: unless-stopped

#################################  mongo-exporter  #################################

  mongo-exporter:
    image: bitnami/mongodb-exporter:0.39.0
    container_name: mongo-exporter
      #environment:
      #- MONGODB_URI=mongodb://admin:adminpass@mongodb:27017/admin
      #- MONGODB_URI=mongodb://exporter:exporterpass@mongodb:27017/admin
    ports:
      - "9216:9216"
    command:
      - "--mongodb.uri=mongodb://admin:adminpass@mongodb:27017/admin"
      - "--compatible-mode"
      - "--collect-all"
    depends_on:
      - mongodb
    networks:
      - monitoring
    restart: unless-stopped

#################################  mysql database  #################################

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: exporter
      MYSQL_PASSWORD: exporterpassword
      MYSQL_DATABASE: exampledb
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - monitoring

#################################  mysql-exporter  #################################

  mysql-exporter:
    image: prom/mysqld-exporter
    container_name: mysql-exporter
    ports:
      - "9104:9104"
    volumes:
      - ./mysql/my.cnf:/etc/.my.cnf:ro
    command:
      - '--config.my-cnf=/etc/.my.cnf'
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  mongodb_data:
  mysql_data:

networks:
  monitoring:
    driver: bridge
